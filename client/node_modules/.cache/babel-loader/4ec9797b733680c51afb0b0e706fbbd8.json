{"ast":null,"code":"import _slicedToArray from \"/Users/andyyu/Desktop/Vixual/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andyyu/Desktop/Vixual/client/src/components/member/MemberRoom.js\";\nimport React, { useState, useEffect } from 'react';\nimport SearchBar from './SearchBar';\nimport \"./Member.css\";\nimport axios from 'axios';\nimport VideoItems from './VideoItems';\nimport QueuedVideoList from './QueuedVideoList';\nimport VideoPlayer from './VideoPlayer';\nimport io from 'socket.io-client'; //import { use } from '../../../../server/router';\n\nlet socket;\n\nfunction MemberRoom(props) {\n  const roomId = props.match.params.id; //set initial state\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        videos = _useState2[0],\n        setVideo = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        selectedVideo = _useState4[0],\n        setSelectedVideo = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        playPause = _useState6[0],\n        setPlayPause = _useState6[1];\n\n  const ENDPOINT = 'localhost:5000';\n  const KEY = \"AIzaSyAaRcZkRc1u3fSFFPN2GQTWjuYc7pDIQtw\";\n\n  const getSearch = input => {\n    //console.log(input)\n    axios.get(\"https://www.googleapis.com/youtube/v3/search\", {\n      params: {\n        part: \"snippet\",\n        maxResults: 5,\n        key: KEY,\n        type: \"video\",\n        q: input\n      }\n    }).then(response => {\n      // console.log('Received response form Youtube API');\n      // console.log(response.data.items);\n      setVideo(response.data.items);\n    }).catch(err => {\n      console.error(err);\n    });\n    ;\n  }; //this should add selected video to a queue,\n  //and have play video socket after we have a queue\n\n\n  const handleSelectedVideo = video => {\n    socket.emit('selectedVideo', {\n      video,\n      roomId\n    });\n  }; //on initial connection\n\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit('joinRoom', roomId); //for unmount\n\n    return () => {\n      socket.emit('disconnect', roomId);\n      socket.off();\n    };\n  }, [ENDPOINT, roomId]);\n  useEffect(() => {\n    socket.on('setVideo', videoId => {\n      setSelectedVideo(videoId);\n    });\n  }, [selectedVideo]);\n\n  const emitPlayPause = (togglePlayPause, roomId) => {\n    socket.emit('playPauseVideo', {\n      togglePlayPause,\n      roomId\n    });\n  };\n\n  useEffect(() => {\n    socket.on('handleSocketPlayPause', socketPlayPause => {\n      setPlayPause(socketPlayPause);\n    });\n  }, [playPause]);\n\n  const emitCurrentTime = (time, roomId) => {\n    socket.emit('currentTime', {\n      time,\n      roomId\n    });\n    const test = \"testing\";\n  };\n\n  useEffect(() => {});\n  return React.createElement(\"div\", {\n    className: \"member-room\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"search-bar ui segment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(SearchBar, {\n    sendSearch: getSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(VideoItems, {\n    videos: videos,\n    handleSelectedVideo: handleSelectedVideo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(VideoPlayer, {\n    testing: test,\n    videoId: selectedVideo,\n    roomId: roomId,\n    playPause: playPause,\n    emitPlayPause: emitPlayPause,\n    emitCurrentTime: emitCurrentTime,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })));\n}\n\nexport default MemberRoom;","map":{"version":3,"sources":["/Users/andyyu/Desktop/Vixual/client/src/components/member/MemberRoom.js"],"names":["React","useState","useEffect","SearchBar","axios","VideoItems","QueuedVideoList","VideoPlayer","io","socket","MemberRoom","props","roomId","match","params","id","videos","setVideo","selectedVideo","setSelectedVideo","playPause","setPlayPause","ENDPOINT","KEY","getSearch","input","get","part","maxResults","key","type","q","then","response","data","items","catch","err","console","error","handleSelectedVideo","video","emit","off","on","videoId","emitPlayPause","togglePlayPause","socketPlayPause","emitCurrentTime","time","test"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport SearchBar from './SearchBar';\nimport \"./Member.css\";\nimport axios from 'axios';\nimport VideoItems from './VideoItems';\nimport QueuedVideoList from './QueuedVideoList';\nimport VideoPlayer from './VideoPlayer';\nimport io from 'socket.io-client'\n//import { use } from '../../../../server/router';\nlet socket;\n\nfunction MemberRoom(props){\n    const roomId = props.match.params.id;\n\n    //set initial state\n    const [videos, setVideo] = useState([])\n    const [selectedVideo, setSelectedVideo] = useState('')\n    const [playPause, setPlayPause] = useState(false)\n\n    const ENDPOINT = 'localhost:5000';\n\n    const KEY = \"AIzaSyAaRcZkRc1u3fSFFPN2GQTWjuYc7pDIQtw\";\n\n    const getSearch = (input) => {\n        //console.log(input)\n        axios.get(\"https://www.googleapis.com/youtube/v3/search\", {\n            params: {\n              part: \"snippet\",\n              maxResults: 5,\n              key: KEY,\n              type: \"video\",\n              q: input\n            },\n          }\n        ).then(response => {\n            // console.log('Received response form Youtube API');\n            // console.log(response.data.items);\n            setVideo(response.data.items);\n        }).catch(err => {\n            console.error(err);\n        });\n        ;\n    }\n\n    //this should add selected video to a queue,\n    //and have play video socket after we have a queue\n    const handleSelectedVideo = (video) => {\n        socket.emit('selectedVideo', {video, roomId});\n    }\n\n    //on initial connection\n    useEffect(() => {\n        socket = io(ENDPOINT);\n        socket.emit('joinRoom', roomId);\n\n        //for unmount\n        return () => {\n            socket.emit('disconnect', roomId);\n            socket.off();\n        }\n    }, [ENDPOINT, roomId])\n\n    useEffect(() => {\n        socket.on('setVideo', (videoId) => {\n            setSelectedVideo(videoId);\n        });\n    }, [selectedVideo])\n\n    const emitPlayPause = (togglePlayPause, roomId) => {\n        socket.emit('playPauseVideo', {togglePlayPause, roomId});\n    }\n\n    useEffect(() => {\n        socket.on('handleSocketPlayPause', (socketPlayPause) => {\n            setPlayPause(socketPlayPause)\n        });\n    }, [playPause])\n\n    const emitCurrentTime = (time, roomId) => {\n        socket.emit('currentTime', {time, roomId});\n        const test = \"testing\";\n    }\n\n    useEffect(() => {\n\n    })\n\n\n    return(\n        <div className=\"member-room\">\n            <div className=\"search-bar ui segment\">\n                <SearchBar sendSearch={getSearch}/>\n                <VideoItems videos={videos} handleSelectedVideo={handleSelectedVideo}/>\n                <VideoPlayer testing={test} videoId={selectedVideo} roomId={roomId} playPause={playPause} emitPlayPause={emitPlayPause} emitCurrentTime={emitCurrentTime}/>\n                {/* <QueuedVideoList addToQueue={selectedVideo}/> */}\n            </div>\n        </div>\n    );\n\n}\n\nexport default MemberRoom;\n\n"]},"metadata":{},"sourceType":"module"}