{"ast":null,"code":"import _slicedToArray from \"/Users/andyyu/Desktop/Vixual/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andyyu/Desktop/Vixual/client/src/components/member/MemberRoom.js\";\nimport React, { useState, useEffect } from 'react';\nimport SearchBar from './SearchBar';\nimport \"./Member.css\";\nimport axios from 'axios';\nimport VideoItems from './VideoItems';\nimport QueuedVideoList from './QueuedVideoList';\nimport io from 'socket.io-client';\nlet socket;\n\nfunction MemberRoom(props) {\n  const roomId = props.match.params.id; //set initial state\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        videos = _useState2[0],\n        setVideo = _useState2[1]; // const [selectedVideo, setSelectedVideo] = useState({\n  //     videoId: '',\n  //     title: 'empty'\n  // })\n\n\n  const ENDPOINT = 'localhost:5000';\n  const KEY = \"AIzaSyAaRcZkRc1u3fSFFPN2GQTWjuYc7pDIQtw\";\n\n  const getSearch = input => {\n    console.log(input);\n    axios.get(\"https://www.googleapis.com/youtube/v3/search\", {\n      params: {\n        part: \"snippet\",\n        maxResults: 5,\n        key: KEY,\n        type: \"video\",\n        q: input\n      }\n    }).then(response => {\n      console.log('Received response form Youtube API');\n      console.log(response.data.items);\n      setVideo(response.data.items);\n    }).catch(err => {\n      console.error(err);\n    });\n    ;\n  }; //this should add selected video to a queue,\n  //and have play video socket after we have a queue\n\n\n  const handleSelectedVideo = video => {\n    // setSelectedVideo({\n    //     videoId: video.id.videoId,\n    //     title: video.snippet.title\n    // })\n    socket.emit('selectedVideo', {\n      video,\n      roomId\n    });\n  }; //on initial connection\n\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit('joinRoom', roomId);\n    socket.on('setVideo', videoId => {\n      console.log(videoId);\n    }); //for unmount\n\n    return () => {\n      socket.emit('disconnect', roomId);\n      socket.off();\n    };\n  }, [ENDPOINT, roomId]); // useEffect(() => {\n  //     socket.on('setVideo', (videoId) => {\n  //         console.log(videoId)\n  //     });\n  // })\n\n  return React.createElement(\"div\", {\n    className: \"member-room\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"search-bar ui segment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(SearchBar, {\n    sendSearch: getSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(VideoItems, {\n    videos: videos,\n    handleSelectedVideo: handleSelectedVideo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })));\n}\n\nexport default MemberRoom;","map":{"version":3,"sources":["/Users/andyyu/Desktop/Vixual/client/src/components/member/MemberRoom.js"],"names":["React","useState","useEffect","SearchBar","axios","VideoItems","QueuedVideoList","io","socket","MemberRoom","props","roomId","match","params","id","videos","setVideo","ENDPOINT","KEY","getSearch","input","console","log","get","part","maxResults","key","type","q","then","response","data","items","catch","err","error","handleSelectedVideo","video","emit","on","videoId","off"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport SearchBar from './SearchBar';\nimport \"./Member.css\";\nimport axios from 'axios';\nimport VideoItems from './VideoItems';\nimport QueuedVideoList from './QueuedVideoList';\nimport io from 'socket.io-client'\nlet socket;\n\n\nfunction MemberRoom(props){\n    const roomId = props.match.params.id;\n\n    //set initial state\n    const [videos, setVideo] = useState([])\n    // const [selectedVideo, setSelectedVideo] = useState({\n    //     videoId: '',\n    //     title: 'empty'\n    // })\n\n    const ENDPOINT = 'localhost:5000';\n\n    const KEY = \"AIzaSyAaRcZkRc1u3fSFFPN2GQTWjuYc7pDIQtw\";\n\n    const getSearch = (input) => {\n        console.log(input)\n        axios.get(\"https://www.googleapis.com/youtube/v3/search\", {\n            params: {\n              part: \"snippet\",\n              maxResults: 5,\n              key: KEY,\n              type: \"video\",\n              q: input\n            },\n          }\n        ).then(response => {\n            console.log('Received response form Youtube API');\n            console.log(response.data.items);\n            setVideo(response.data.items);\n        }).catch(err => {\n            console.error(err);\n        });\n        ;\n    }\n\n    //this should add selected video to a queue,\n    //and have play video socket after we have a queue\n    const handleSelectedVideo = (video) => {\n        // setSelectedVideo({\n        //     videoId: video.id.videoId,\n        //     title: video.snippet.title\n        // })\n        socket.emit('selectedVideo', {video, roomId});\n    }\n\n    //on initial connection\n    useEffect(() => {\n        socket = io(ENDPOINT);\n        socket.emit('joinRoom', roomId);\n\n        socket.on('setVideo', (videoId) => {\n            console.log(videoId)\n        });\n\n        //for unmount\n        return () => {\n            socket.emit('disconnect', roomId);\n            socket.off();\n        }\n    }, [ENDPOINT, roomId])\n\n    // useEffect(() => {\n    //     socket.on('setVideo', (videoId) => {\n    //         console.log(videoId)\n    //     });\n    // })\n\n\n    return(\n        <div className=\"member-room\">\n            <div className=\"search-bar ui segment\">\n                <SearchBar sendSearch={getSearch}/>\n                <VideoItems videos={videos} handleSelectedVideo={handleSelectedVideo}/>\n                {/* <QueuedVideoList addToQueue={selectedVideo}/> */}\n            </div>\n        </div>\n    );\n\n}\n\nexport default MemberRoom;\n\n"]},"metadata":{},"sourceType":"module"}